/************************************************************
 * File name: CMechanism.chf
 *            member functions of class CMechanism
 ************************************************************/
#include <mechanism.h>
/******************************************
 * Constructor of class CQuickReturn
 ******************************************/
CQuickReturn::CQuickReturn() 
{
	// setup default lengths (Meters)
	r_length[1] = .05;
	r_length[2] = .01;
	r_length[3] = .03;
	r_length[4] = .045;
	r_length[5] = .08;
	r_length[7] = .03;

	// setup default phase angles (radians)
	theta[1] = M_DEG2RAD(10); //converted to radians

	//intialize SI units as default
	m_uscunit = 0; 

	// add default angular velocites and force and number of points for animation



}
/***************************************************************
 * setLinks()
 *
 * Set the Length for each link and angle between ground pins.
 *
 * Arguments: r1  ... length Link 1
 *            r2  ...    "     "  2
 *            r4  ...    "     "  4
 *            r5  ...    "     "  5
 *            r7  ...    "     "  7
 *            theta 1 ... angle of Link 1
 ***************************************************************/
void CQuickReturn::setLinks(double r1, r2, r3,r4, r5, r7, theta1)
{
	//check r1 > r2
	if (r1 < r2){
		printf("r1 must be greater than r2\n");
		exit(1);
	}

	// check r2+r3 < r1 + r4
	if ((r2+r3) > (r1 + r4){
		printf("r2+r3 must be less than r1+r4\n");
		exit(1);
	}

	if (theta1 > 90 || theta1 < 0){
		printf("theta1 must be between 0 and 90 degrees");
		exit(1)
	}


	// setup default lengths (Meters)
	r_length[1] = r1;
	r_length[2] = r2;
	r_length[3] = r3;
	r_length[4] = r4;
	r_length[5] = r5;
	r_length[7] = r7;

	// setup default phase angles (radians)
	theta[1] = M_DEG2RAD(theta1); //converted to radians

	// if English units
   if(m_uscunit)
   {
      r_length[1] *= M_FT2M;     // ft --> m
      r_length[2] *= M_FT2M;     // ft --> m
      r_length[4] *= M_FT2M;     // ft --> m
      r_length[5] *= M_FT2M;     // ft --> m
      r_length[7] *= M_FT2M;     // ft --> m
   }
}



}

/******************************************
 * uscUnit()
 *
 * Set the units preference.
 *
 * Arguments: unit ... true for USC units
 *                     false for SI units
 * this function derived from CQuickReturn.chf by Harry Chang
 ******************************************/
void CMechanism::uscUnit(bool unit)
{
   m_uscunit = unit;
   if(m_uscunit)
      printf("\n!! You're using ENGLISH UNITS !!\n\n");
   else
      printf("\n!! You're using SI UNITS !!\n\n");
}

